/* ========================================
	CatRobotGame/
	------------------------------------
	丸影管理用cpp
	------------------------------------
	ShadowManager.cpp
========================================== */

// =============== インクルード ===================
#include "ShadowManager.h"
#include "SceneBase.h"		// シーン基底クラス

/* ========================================
	コンストラクタ関数
	-------------------------------------
	内容：初期化
=========================================== */
ShadowManager::ShadowManager()
	: m_pShadowList()
	, m_pScene(nullptr)
{
}

/* ========================================
	インスタンス(シングルトン)取得関数
	-------------------------------------
	内容：自クラスのインスタンスを取得
	-------------------------------------
	戻値：自クラスのインスタンス
=========================================== */
ShadowManager& ShadowManager::GetInstance()
{
	static ShadowManager instance;
	return instance;
}

/* ========================================
	初期化関数
	-------------------------------------
	内容：シーン開始時に影を取得する
	-------------------------------------
	引数1：シーンクラスのポインタ
=========================================== */
void ShadowManager::Init(SceneBase* pScene)
{
	m_pScene = pScene;

	// 影リストをクリア
	m_pShadowList.clear();

}

/* ========================================
	影追加関数
	-------------------------------------
	内容：影を追加する
	-------------------------------------
	引数1：影オブジェクト
=========================================== */
void ShadowManager::AddShadow(ComponentShadow* pShadow)
{
	m_pShadowList.push_back(pShadow);
}

/* ========================================
	影削除関数
	-------------------------------------
	内容：影を削除する
	-------------------------------------
	引数1：影オブジェクト
=========================================== */
void ShadowManager::RemoveShadow(ComponentShadow* pShadow)
{
	auto itr = std::find(m_pShadowList.begin(), m_pShadowList.end(), pShadow);
	if (itr != m_pShadowList.end())
	{
		m_pShadowList.erase(itr);
	}
}

/* ========================================
	ゲッター(影)関数
	-------------------------------------
	内容：指定番号の影を取得
	-------------------------------------
	引数1：影番号
	-------------------------------------
	戻値：影オブジェクト
=========================================== */
ComponentShadow* ShadowManager::GetShadow(int num)
{
	return m_pShadowList.at(num);
}

/* ========================================
	ゲッター(影リスト)関数
	-------------------------------------
	戻値：std::vector<ObjectShadow*> 影リスト
=========================================== */
std::vector<ComponentShadow*> ShadowManager::GetShadowList()
{
	return m_pShadowList;
}

/* ========================================
	ゲッター(影数)関数
	-------------------------------------
	戻値：int 影数
=========================================== */
int ShadowManager::GetShadowNum()
{
	return m_pShadowList.size();
}
