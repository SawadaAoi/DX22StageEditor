/* ========================================
	DX22Base/
	------------------------------------
	UIコンポーネント基底用cpp
	------------------------------------
	UIComponentBase.cpp
========================================== */

// =============== インクルード =====================
#include "UIComponentBase.h"
#include <windows.h>
#include "UIObjectBase.h"

/* ========================================
	コンストラクタ関数
	-------------------------------------
	内容：初期化
	-------------------------------------
	引数1: 所有者オブジェクト
	引数2: 更新順序
=========================================== */
UIComponentBase::UIComponentBase(UIObjectBase* pOwner, int nOrder)
	: m_pOwnerObj(pOwner)
	, m_nUpdateOrder(nOrder)
{
	// 所有者オブジェクトがnullptrの場合はエラーを出力
	if (pOwner == nullptr)
	{
		OutputDebugStringA("UIComponentBase::UIComponentBase() : 所有者オブジェクトがnullptrです。\n");
	}

	// 子オブジェクトのコンストラクタでは引数に更新順序を持たせず、
	// コンポーネントごとに固定値として更新順序を設定する
}

/* ========================================
	初期化関数
	-------------------------------------
	内容：初期化処理
=========================================== */
void UIComponentBase::Init()
{
	// 必要に応じて派生クラスでオーバーライドする
}

/* ========================================
	終了関数
	-------------------------------------
	内容：終了処理
=========================================== */
void UIComponentBase::Uninit()
{
	// 必要に応じて派生クラスでオーバーライドする
}

/* ========================================
	更新関数
	-------------------------------------
	内容：更新処理
=========================================== */
void UIComponentBase::Update()
{
	// 必要に応じて派生クラスでオーバーライドする
}

/* ========================================
	描画関数
	-------------------------------------
	内容：描画処理
=========================================== */
void UIComponentBase::Draw()
{
	// 必要に応じて派生クラスでオーバーライドする
}

/* ========================================
	ゲッター(所有者オブジェクト)関数
	-------------------------------------
	戻値：所有者オブジェクト
=========================================== */
UIObjectBase* UIComponentBase::GetOwnerObject()
{
	return m_pOwnerObj;
}

/* ========================================
	ゲッター(更新順序)関数
	-------------------------------------
	戻値：更新順序
=========================================== */
int UIComponentBase::GetUpdateOrder()
{
	return m_nUpdateOrder;
}

/* ========================================
	ゲッター(コンポーネントID)関数
	-------------------------------------
	戻値：コンポーネントID
=========================================== */
size_t UIComponentBase::GetTypeID() const
{
	return 0;
}

